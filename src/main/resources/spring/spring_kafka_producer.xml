<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd">

    <!--引入配置属性文件 -->
    <context:property-placeholder location="classpath:kafka/kafka_producer.properties" ignore-unresolvable="true"/>

    <!-- 定义producer的参数 -->
    <bean id="producerProperties" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <entry key="bootstrap.servers" value="${kafka.metadata.broker.list}"/>
                <entry key="key.serializer" value="${kafka.key.serializer.class}"/>
                <entry key="value.serializer" value="${kafka.value.serializer}"/>
                <entry key="request.required.acks" value="${kafka.request.required.acks}"/>
                <entry key="request.timeout.ms" value="${kafka.outTime}"/>
            </map>
        </constructor-arg>
    </bean>


    <!-- 创建kafkatemplate需要使用的producerfactory bean -->
    <bean id="producerFactory" class="org.springframework.kafka.core.DefaultKafkaProducerFactory">
        <constructor-arg ref="producerProperties"/>
    </bean>


     <!--创建kafkatemplate bean，使用的时候，只需要注入这个bean，即可使用template的send消息方法 -->
    <bean id="kafkaTemplate" class="org.springframework.kafka.core.KafkaTemplate">
        <constructor-arg ref="producerFactory"/>
        <constructor-arg name="autoFlush" value="true"/>
        <property name="defaultTopic" value="${kafka.topic}"/>
    </bean>

</beans>
